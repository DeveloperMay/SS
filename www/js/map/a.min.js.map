{"version":3,"names":[],"mappings":"","sources":["a.js"],"sourcesContent":["window.a = {\n\t/* ADD EVENTS */\n\tevts: {\n\t\tadd: function (evt, el, fn) {\n\t\t\tif(el !== null){\n\t\t\t\tif(window.addEventListener){\n\t\t\t\t\tel.addEventListener(evt, function(evt){\n\t\t\t\t\t\tfn(evt);\n\t\t\t\t\t}, true);\n\t\t\t\t}else{\n\t\t\t\t\tel.attachEvent(\"on\"+evt, function(){\n\t\t\t\t\t\tfn(evt);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\ttargt: function (e) {\n\t\treturn e.target;\n\t},\n\ttrigger: function (ev, el){\n\t\tif(document.createEvent){\n\t\t\tevento = document.createEvent('HTMLEvents');\n\t\t\tevento.initEvent(ev, true, true);\n\t\t\tel.dispatchEvent(evento);\n\t\t}else{\n\t\t\tevento = document.createEventObject();\n\t\t\tel.fireEvent('on'+ev, evento);\n\t\t}\n\t},\n\tid: function(element){\n\t\treturn document.getElementById(element);\n\t},\n\tdelay: function (fn, tm) {\n\t\twindow.setTimeout(function () {\n\t\t\tfn();\n\t\t}, tm);\n\t},\n\tdelayPersistent: (function(fn, ms){\n\t\tvar timer = 0;\n\t\treturn function(fn, ms){\n\t\t\tclearTimeout(timer);\n\t\t\ttimer = setTimeout(fn, ms);\n\t\t};\n\t}()),\n\tdelayPersistent2: (function(fn, ms, label){\n\t\tif(typeof(delayPersistent2) === 'undefined'){\n\t\t\twindow.delayPersistent2 = {};\n\t\t}\n\t\treturn function(fn, ms, label){\n\t\t\tclearTimeout(delayPersistent2[label]);\n\t\t\tdelayPersistent2[label] = setTimeout(fn, ms);\n\t\t};\n\t}()),\n\ttestJSON: function(text){\n\t\tif (typeof text !==\"string\"){\n\t\t\treturn false;\n\t\t}\n\t\ttry{\n\t\t\treturn true;\n\t\t}\n\t\tcatch (error){\n\t\t\treturn false;\n\t\t}\n\t},\n\tajax: function (options) {\n\n\t\tif(a.id('box-pc-menu')){\n\n\t\t\tif(a.id('box-pc-menu').classList.contains('box-menu-pc-open') && typeof(closeMenuPC) !== 'undefined'){\n\n\t\t\t\tcloseMenuPC();\n\t\t\t}\n\t\t}\n\t\tvar XHR;\n\t\tvar strPost = new Array();\n\t\tvar r20 = /%20/g;\n\n\t\tif(window.XMLHttpRequest){\n\t\t\tXHR = new XMLHttpRequest();\n\t\t}else if(window.ActiveXObject){\n\t\t\tXHR = new ActiveXObject('Msxml2.XMLHTTP');\n\t\t\tif(!XHR){\n\t\t\t\tXHR = new ActiveXObject('Microsoft.XMLHTTP');\n\t\t\t}\n\t\t}else{\n\t\t\tconsole.warn('This Browser do not support XMLHttpRequest');\n\t\t\treturn false;\n\t\t}\n\n\t\tif(options.progress){\n\t\t\tXHR.upload.addEventListener('progress', options.progress, false);\n\t\t}\n\n\t\tif(options.error){\n\t\t\tXHR.addEventListener('error', options.error, false);\n\t\t\tXHR.addEventListener('abort', options.error, false);\n\t\t}\n\n\t\tXHR.open('POST', options.url, true);\n\n\t\t/* AS DATA */\n\t\tif(options.data){\n\n\t\t\tXHR.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded;charset=UTF-8\");\n\n\t\t\tfor(x in options.data){\n\t\t\t\tstrPost.push(encodeURIComponent(x)+'='+encodeURIComponent(options.data[x]));\n\t\t\t}\n\n\t\t\tstPost = strPost.join('&').replace(r20, \"+\");\n\t\t\tXHR.send(stPost);\n\n\t\t/* AS FORM */\n\t\t}else if(options.formId){\n\n\t\t\tvar form = a.id(options.formId);\n\t\t\tvar frm = new FormData();\n\n\t\t\tvar inputs = form.getElementsByTagName('input');\n\t\t\tvar tInputs = inputs.length;\n\n\t\t\tfor(x = 0; x < tInputs; x++){\n\t\t\t\tif(inputs[x].getAttribute('name') && !inputs[x].getAttribute('disabled')){\n\n\t\t\t\t\t/* INPUT FILE */\n\t\t\t\t\tif(inputs[x].type === 'file'){\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar tFiles = inputs[x].files.length;\n\n\t\t\t\t\t\tif(tFiles > 0){\n\t\t\t\t\t\t\tfor(z = 0; z < tFiles; z++){\n\t\t\t\t\t\t\t\tvar fle = inputs[x].files[z];\n\t\t\t\t\t\t\t\tfrm.append(inputs[x].getAttribute('name'), fle);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t/* RADIO AND CHECKBOX */\n\t\t\t\t\t}else if(inputs[x].type === 'radio' || inputs[x].type === 'checkbox'){\n\t\t\t\t\t\tif(inputs[x].checked === true){\n\t\t\t\t\t\t\tfrm.append(inputs[x].getAttribute('name'), inputs[x].value);\n\t\t\t\t\t\t}\n\t\t\t\t\t/* OTHERS INPUTS FIELDS */\n\t\t\t\t\t}else{\n\t\t\t\t\t\tfrm.append(inputs[x].getAttribute('name'), inputs[x].value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar textareas = form.getElementsByTagName('textarea');\n\t\t\tvar tTextareas = textareas.length;\n\n\t\t\tfor(x = 0; x < tTextareas; x++){\n\t\t\t\tif(textareas[x].getAttribute('name') && !textareas[x].getAttribute('disabled')){\n\t\t\t\t\tfrm.append(textareas[x].getAttribute('name'), textareas[x].value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar selects = form.getElementsByTagName('select');\n\t\t\tvar tSelects = selects.length;\n\n\t\t\tfor(x = 0; x < tSelects; x++){\n\t\t\t\tif(selects[x].getAttribute('name') && !selects[x].getAttribute('disabled')){\n\t\t\t\t\tfrm.append(selects[x].getAttribute('name'), selects[x].value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tXHR.send(frm);\n\n\t\t}\n\n\t\tXHR.onreadystatechange = function(){\n\n\t\t\tif(XHR.readyState === 4 && (XHR.status === 200 || XHR.status === 304)){\n\t\t\t\tif(typeof(options.dataType) !== 'undefined'){\n\n\t\t\t\t\tif(options.dataType === 'JSON' || options.dataType === 'json'){\n\t\t\t\t\t\tjsonStr = XHR.responseText;\n\n\n\t\t\t\t\t\tvar TesteText = a.testJSON(XHR.responseText);\n\t\t\t\t\t\tjsonStr = eval(\"(\"+XHR.responseText+\")\");\n\t\n\t\t\t\t\t\tif(typeof(options.done) === 'function'){\n\t\t\t\t\t\t\toptions.done(jsonStr);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}else{\n\t\t\t\t\tif (typeof(options.done) === 'function'){\n\t\t\t\t\t\toptions.done(XHR.responseText);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(XHR.readyState === 4 && XHR.status === 404){\n\t\t\t\tif(typeof(options.error) === 'function'){\n\t\t\t\t\toptions.error(XHR);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(XHR.readyState === 4 && XHR.status === 500){\n\t\t\t\tif(typeof(options.error) === 'function'){\n\t\t\t\t\toptions.error(XHR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn XHR;\n\t},\n};"],"file":"../a.min.js"}